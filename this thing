const Discord = require('discord.js');

const  client = new Discord.Client();



const ytdl = require("ytdl-core");

const fs = require('fs');

const request = require('request');

const getYoutubeID = require("get-youtube-id");

const fetchVideoInfo = require("youtube-info");

var config = JSON.parse(fs.readFileSync('./config.json', 'utf-8'));
var prefix = config.prefix;
const yt_api_key = config.yt_api_key;
const bot_controller = config.bot_controller;


var queue =[];
var isPlaying = false;
var dispatcher = null;
var voiceChannel = null;
var skipReq = 0;
var skippers = [];

function playMusic(id, message) {
    voiceChannel = message.member.voiceChannel;

    voiceChannel.join().then(function (connection) {
       stream = ytdl("https://www.youtube.com/watch?v=" + id, {
           filter: "audioonly"
       });
       skipReq = 0;
       skippers = [];

       dispatcher = connection.playStream(stream);
    });
}



function add_to_queue(strID){
    if(isYoutube(strID)){
        queue.push(getYoutubeID(strID));
    }else {
        queue.push(strID);
    }

}

function isYoutube(str){
    return str.toLowerCase().indexOf("youtube.com") > -1;
}

function getID(str, cb) {
    if(isYoutube(str)) {
        cb(getYoutubeID(str));
} else {
    search_video(str, function (id) {
        cb(id);
    });
  }
}


function search_video(query, callback) {
    request("https://www.googleapis.com/youtube/v3/search?part=id&type=video&q" + encodeURIComponent(query) + "&key" + yt_api_key, function(error, response, body) {

    var json = JSON.parse(body);
    console.log(json)
   callback(json.items[0].id.videoId);
});
}





client.on("ready", () => {

    console.log("All Done,Vaxei");

    client.user.setPresence( {
      status: 'online',
      game: {
          name: 'Let music free you... use me!help',
          type: "STREAMING"
        }
    } );

});






client.on("message", function (message) {
   if(!message.content.startsWith(prefix)) return;
    if(message.author.bot) return;
    const args = message.content.split(' ').slice(1).join("");
    const member = message.member;
   const mess = message.content.toLowerCase();
   
    

    if(mess.startsWith(prefix + 'play')) {
       if(queue.lenght > 0 || isPlaying) { 
        getID(args, function (id) {
               add_to_queue(id);
               fetchVideoInfo(id, function (err, videoInfo) {
                   if (err) throw new Error(err);
                   message.reply("added to queue: **" + videoInfo.title + "**");
                });
           });
       }else {
           isPlaying = true;
           getID(args, function (id) {
               queue.push("placeholder");
               playMusic(id, message);
               fetchVideoInfo(id, function (err, videoInfo) {
                   if (err) throw new Error(err);
                   message.reply("now playing: **" + videoInfo.title + "**");
                });
           });
       }
    }
